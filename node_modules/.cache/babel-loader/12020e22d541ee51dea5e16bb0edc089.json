{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus computer\\\\Desktop\\\\my-app-new\\\\src\\\\Components\\\\TaskData.js\";\nimport React from 'react';\nimport DataTable from 'react-data-table-component';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TaskDetails from '../Constant/TaskData.json';\nimport { setTaskDetails } from '../Actions';\n\nclass TaskData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createTask = () => {\n      this.setState({\n        openModal: true,\n        assignModal: false\n      });\n    };\n\n    this.assignTask = () => {\n      this.setState({\n        assignModal: true,\n        openModal: false\n      });\n    };\n\n    this.addTask = () => {\n      let {\n        projectDetails\n      } = this.props;\n      let tasks = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id];\n      tasks[tasks.length] = {\n        id: tasks.length + 1,\n        name: this.state.taskName,\n        assigned_to: this.state.assigned\n      };\n      console.log('@@@@', tasks);\n      this.props.setTaskDetails(tasks);\n      this.setState({\n        tasks,\n        taskName: ''\n      });\n    };\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      openModal: false,\n      assignModal: false,\n      taskName: '',\n      assigned: '',\n      tasks: this.props.taskDetails && this.props.taskDetails.length > 0 ? this.props.taskDetails : TaskDetails\n    };\n  }\n\n  render() {\n    let {\n      userDetails,\n      projectDetails\n    } = this.props;\n    let {\n      assignModal,\n      openModal\n    } = this.state;\n    const columns = [{\n      name: 'ID',\n      selector: 'id',\n      sortable: true\n    }, {\n      name: 'Name',\n      selector: 'name',\n      sortable: true\n    }, {\n      name: 'Assigned To',\n      selector: 'assigned_to',\n      sortable: true\n    }, {\n      name: 'Status',\n      selector: 'status',\n      sortable: true\n    }, {\n      name: 'Actions',\n      selector: 'actions'\n    }];\n    let taskList = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id];\n    const data = taskList && taskList.length > 0 && taskList.map(list => {\n      return {\n        id: list.id,\n        name: list.name,\n        assigned_to: list.assigned_to,\n        status: list.status,\n        actions: /*#__PURE__*/React.createElement(Link, {\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#show-modal\",\n          onClick: this.assignTask,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 26\n          }\n        }, \"Assign\")\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-md-offset-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, projectDetails.name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Task List\"), userDetails.user_type === \"Manager\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#show-modal\",\n      onClick: this.createTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Create Task\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"show-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, assignModal ? \"Assign\" : \"Create New Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, openModal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, \"Task Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"taskName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.taskName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"assigned\",\n      onChange: e => this.handleChange(e),\n      value: this.state.assigned,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }, \"Not Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \"Closed\")))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.addTask,\n      disabled: this.state.taskName ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"Add\")))))) : null, /*#__PURE__*/React.createElement(DataTable, {\n      columns: columns,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userDetails: state.userData,\n    projectDetails: state.project,\n    taskDetails: state.taskData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTaskDetails\n})(TaskData);","map":{"version":3,"sources":["C:/Users/asus computer/Desktop/my-app-new/src/Components/TaskData.js"],"names":["React","DataTable","connect","Link","TaskDetails","setTaskDetails","TaskData","Component","constructor","props","createTask","setState","openModal","assignModal","assignTask","addTask","projectDetails","tasks","state","id","length","name","taskName","assigned_to","assigned","console","log","handleChange","e","value","target","taskDetails","render","userDetails","columns","selector","sortable","taskList","data","map","list","status","actions","user_type","mapStateToProps","userData","project","taskData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport TaskDetails from '../Constant/TaskData.json';\r\nimport { setTaskDetails } from '../Actions';\r\n\r\nclass TaskData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModal: false,\r\n            assignModal: false,\r\n            taskName: '',\r\n            assigned: '',\r\n            tasks: this.props.taskDetails && this.props.taskDetails.length>0 ? this.props.taskDetails : TaskDetails\r\n        }\r\n    }\r\n    createTask = () => {\r\n        this.setState({ openModal: true, assignModal: false })\r\n    }\r\n    assignTask = () => {\r\n        this.setState({ assignModal: true, openModal: false })\r\n    }\r\n    addTask = () => {\r\n        let { projectDetails } = this.props;\r\n        let tasks = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id];\r\n        tasks[tasks.length] = {id: tasks.length + 1, name: this.state.taskName, assigned_to: this.state.assigned}\r\n        console.log('@@@@', tasks)\r\n        this.props.setTaskDetails(tasks)\r\n        this.setState({ tasks, taskName: '' })\r\n    }\r\n    handleChange = (e) => {\r\n        let { name,value } = e.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n    render() {\r\n        let { userDetails, projectDetails } = this.props;\r\n        let { assignModal, openModal } = this.state;\r\n        const columns = [\r\n            {\r\n                name: 'ID',\r\n                selector: 'id',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Name',\r\n                selector: 'name',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Assigned To',\r\n                selector: 'assigned_to',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Status',\r\n                selector: 'status',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Actions',\r\n                selector: 'actions',\r\n            }\r\n          ];\r\n        let taskList = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id]\r\n        const data = taskList && taskList.length > 0 && taskList.map((list)=>{\r\n            return {\r\n                id: list.id,\r\n                name: list.name,\r\n                assigned_to: list.assigned_to,\r\n                status: list.status,\r\n                actions: <Link data-toggle=\"modal\" data-target=\"#show-modal\" onClick={this.assignTask}>Assign</Link>\r\n            }\r\n        })\r\n        return (\r\n            <div className=\"col-md-6 col-md-offset-3\">\r\n                <h2>{projectDetails.name}</h2>\r\n                <h2>Task List</h2>\r\n                {userDetails.user_type === \"Manager\" ?\r\n                <div className=\"col-md-12\">\r\n                    <button class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#show-modal\" onClick={this.createTask}>Create Task</button>\r\n                    <div className=\"modal\" id=\"show-modal\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h2>{assignModal ? \"Assign\" : \"Create New Task\"}</h2>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {openModal ?\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Task Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"taskName\" onChange={(e)=>this.handleChange(e)} value={this.state.taskName}/>\r\n                                </div> : null}\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Assigned To</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"assigned\" onChange={(e)=>this.handleChange(e)} value={this.state.assigned}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Status</label>\r\n                                    <select>\r\n                                        <option>Pending</option>\r\n                                        <option>In Progress</option>\r\n                                        <option>Completed</option>\r\n                                        <option>Not Completed</option>\r\n                                        <option>Closed</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.addTask} disabled={this.state.taskName ? false : true}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                : null}\r\n                <DataTable \r\n                columns={columns}\r\n                data={data}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.userData,\r\n        projectDetails: state.project,\r\n        taskDetails: state.taskData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{setTaskDetails})(TaskData);"]},"metadata":{},"sourceType":"module"}