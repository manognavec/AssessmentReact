{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus computer\\\\Desktop\\\\my-app-new\\\\src\\\\Components\\\\TaskData.js\";\nimport React from 'react';\nimport DataTable from 'react-data-table-component';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TaskDetails from '../Constant/TaskData.json';\nimport { setTaskDetails } from '../Actions';\n\nclass TaskData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createTask = () => {\n      this.setState({\n        openModal: true,\n        assignModal: false,\n        assignData: '',\n        assigned: '',\n        status: ''\n      });\n    };\n\n    this.assignTask = (e, data) => {\n      e.preventDefault();\n      this.setState({\n        assignModal: true,\n        openModal: false,\n        assignData: data,\n        assigned: data.assigned_to,\n        status: data.status\n      });\n    };\n\n    this.addTask = status => {\n      let {\n        projectDetails\n      } = this.props;\n      let tasks = this.state.tasks;\n      let tasksList = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id];\n\n      if (tasksList && tasksList.length > 0) {\n        if (status === \"create\") {\n          tasksList[tasksList.length] = {\n            id: tasksList.length + 1,\n            name: this.state.taskName,\n            assigned_to: this.state.assigned,\n            status: this.state.status\n          };\n        } else {\n          tasksList = tasksList.map(list => {\n            if (list.id === this.state.assignData.id) {\n              list.assigned_to = this.state.assigned ? this.state.assigned : list.assigned_to;\n              list.status = this.state.status ? this.state.status : list.status;\n            }\n\n            return list;\n          });\n        }\n      } // tasks[projectDetails.id - 1][projectDetails.id] = tasksList;\n\n\n      console.log('@@@@', tasks);\n      this.props.setTaskDetails(tasks);\n      this.setState({\n        tasks,\n        taskName: ''\n      });\n    };\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      openModal: false,\n      assignModal: false,\n      taskName: '',\n      assigned: '',\n      status: '',\n      assignData: '',\n      tasks: this.props.taskDetails && this.props.taskDetails.length > 0 ? this.props.taskDetails : TaskDetails\n    };\n  }\n\n  render() {\n    let {\n      userDetails,\n      projectDetails\n    } = this.props;\n    let {\n      assignModal,\n      openModal\n    } = this.state;\n    const columns = [{\n      name: 'ID',\n      selector: 'id',\n      sortable: true\n    }, {\n      name: 'Name',\n      selector: 'name',\n      sortable: true\n    }, {\n      name: 'Assigned To',\n      selector: 'assigned_to',\n      sortable: true\n    }, {\n      name: 'Status',\n      selector: 'status',\n      sortable: true\n    }, {\n      name: 'Actions',\n      selector: 'actions'\n    }];\n    let taskList = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id];\n    const data = taskList && taskList.length > 0 && taskList.map(list => {\n      return {\n        id: list.id,\n        name: list.name,\n        assigned_to: list.assigned_to,\n        status: list.status,\n        actions: /*#__PURE__*/React.createElement(Link, {\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#show-modal\",\n          onClick: e => this.assignTask(e, list),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 26\n          }\n        }, \"Assign\")\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-md-offset-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, projectDetails.name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Task List\"), userDetails.user_type === \"Manager\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#show-modal\",\n      onClick: this.createTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Create Task\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"show-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, assignModal ? \"Assign\" : \"Create New Task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, openModal ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"Task Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"taskName\",\n      onChange: e => this.handleChange(e),\n      value: this.state.taskName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"assigned\",\n      onChange: e => this.handleChange(e),\n      value: this.state.assigned,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.status,\n      name: \"status\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Pending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, \"Pending\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"In Progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Not Completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    }, \"Not Completed\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, \"Closed\")))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, openModal ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-dismiss\": \"modal\",\n      onClick: () => this.addTask('create'),\n      disabled: this.state.taskName ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Add\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      \"data-dismiss\": \"modal\",\n      onClick: () => this.addTask('update'),\n      disabled: this.state.assigned ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 35\n      }\n    }, \"Update\")))))) : null, /*#__PURE__*/React.createElement(DataTable, {\n      columns: columns,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userDetails: state.userData,\n    projectDetails: state.project,\n    taskDetails: state.taskData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setTaskDetails\n})(TaskData);","map":{"version":3,"sources":["C:/Users/asus computer/Desktop/my-app-new/src/Components/TaskData.js"],"names":["React","DataTable","connect","Link","TaskDetails","setTaskDetails","TaskData","Component","constructor","props","createTask","setState","openModal","assignModal","assignData","assigned","status","assignTask","e","data","preventDefault","assigned_to","addTask","projectDetails","tasks","state","tasksList","id","length","name","taskName","map","list","console","log","handleChange","value","target","taskDetails","render","userDetails","columns","selector","sortable","taskList","actions","user_type","mapStateToProps","userData","project","taskData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport TaskDetails from '../Constant/TaskData.json';\r\nimport { setTaskDetails } from '../Actions';\r\n\r\nclass TaskData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModal: false,\r\n            assignModal: false,\r\n            taskName: '',\r\n            assigned: '',\r\n            status: '',\r\n            assignData: '',\r\n            tasks: this.props.taskDetails && this.props.taskDetails.length>0 ? this.props.taskDetails : TaskDetails\r\n        }\r\n    }\r\n    createTask = () => {\r\n        this.setState({ openModal: true, assignModal: false, assignData: '', assigned: '', status: '' })\r\n    }\r\n    assignTask = (e, data) => {\r\n        e.preventDefault();\r\n        this.setState({ assignModal: true, openModal: false, assignData: data, assigned: data.assigned_to, status: data.status })\r\n    }\r\n    addTask = (status) => {\r\n        let { projectDetails } = this.props;\r\n        let tasks = this.state.tasks;\r\n        let tasksList = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id];\r\n        if(tasksList && tasksList.length > 0) {\r\n            if(status === \"create\") {\r\n                tasksList[tasksList.length] = {id: tasksList.length + 1, name: this.state.taskName, assigned_to: this.state.assigned, status: this.state.status}\r\n            }else{\r\n                tasksList = tasksList.map(list=>{\r\n                    if(list.id === this.state.assignData.id) {\r\n                        list.assigned_to = this.state.assigned ? this.state.assigned : list.assigned_to;\r\n                        list.status = this.state.status ? this.state.status : list.status;\r\n                    }\r\n                    return list;\r\n                })\r\n            }\r\n        }\r\n        // tasks[projectDetails.id - 1][projectDetails.id] = tasksList;\r\n        console.log('@@@@', tasks)\r\n        this.props.setTaskDetails(tasks)\r\n        this.setState({ tasks, taskName: '' })\r\n    }\r\n    handleChange = (e) => {\r\n        let { name,value } = e.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n    render() {\r\n        let { userDetails, projectDetails } = this.props;\r\n        let { assignModal, openModal } = this.state;\r\n        const columns = [\r\n            {\r\n                name: 'ID',\r\n                selector: 'id',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Name',\r\n                selector: 'name',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Assigned To',\r\n                selector: 'assigned_to',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Status',\r\n                selector: 'status',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Actions',\r\n                selector: 'actions',\r\n            }\r\n          ];\r\n        let taskList = this.state.tasks && this.state.tasks[projectDetails.id - 1] && this.state.tasks[projectDetails.id - 1][projectDetails.id]\r\n        const data = taskList && taskList.length > 0 && taskList.map((list)=>{\r\n            return {\r\n                id: list.id,\r\n                name: list.name,\r\n                assigned_to: list.assigned_to,\r\n                status: list.status,\r\n                actions: <Link data-toggle=\"modal\" data-target=\"#show-modal\" onClick={(e)=>this.assignTask(e, list)}>Assign</Link>\r\n            }\r\n        })\r\n        return (\r\n            <div className=\"col-md-6 col-md-offset-3\">\r\n                <h2>{projectDetails.name}</h2>\r\n                <h2>Task List</h2>\r\n                {userDetails.user_type === \"Manager\" ?\r\n                <div className=\"col-md-12\">\r\n                    <button class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#show-modal\" onClick={this.createTask}>Create Task</button>\r\n                    <div className=\"modal\" id=\"show-modal\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h2>{assignModal ? \"Assign\" : \"Create New Task\"}</h2>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {openModal ?\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Task Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"taskName\" onChange={(e)=>this.handleChange(e)} value={this.state.taskName}/>\r\n                                </div> : null}\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Assigned To</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"assigned\" onChange={(e)=>this.handleChange(e)} value={this.state.assigned}/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-12\">\r\n                                    <label>Status</label>\r\n                                    <select value={this.state.status} name=\"status\" onChange={(e)=>this.handleChange(e)}>\r\n                                        <option value=\"Pending\">Pending</option>\r\n                                        <option value=\"In Progress\">In Progress</option>\r\n                                        <option value=\"Completed\">Completed</option>\r\n                                        <option value=\"Not Completed\">Not Completed</option>\r\n                                        <option value=\"Closed\">Closed</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                {openModal ?\r\n                                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={()=>this.addTask('create')} disabled={this.state.taskName ? false : true}>Add</button>\r\n                                : <button  type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={()=>this.addTask('update')} disabled={this.state.assigned ? false : true}>Update</button> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                : null}\r\n                <DataTable \r\n                columns={columns}\r\n                data={data}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userDetails: state.userData,\r\n        projectDetails: state.project,\r\n        taskDetails: state.taskData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{setTaskDetails})(TaskData);"]},"metadata":{},"sourceType":"module"}